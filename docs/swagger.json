{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water tracker",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Water tracker app"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3090"
    },
    {
      "url": "https://successful-minds-db.onrender.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about user information."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Water",
      "description": "Water tracker operations."
    }
  ],
  "paths": {
    "/user/{id}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Patch user by id",
        "operationId": "patchUser",
        "description": "Patch user by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password123"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ]
                  },
                  "avatarUrl": {
                    "description": "Link to user's avatar",
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwhgf/image/upload/image.png"
                  },
                  "waterRate": {
                    "description": "User's water rate",
                    "type": "number",
                    "example": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "operationId": "getUser",
        "description": "Get user by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user information!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user by id",
        "operationId": "updateUser",
        "description": "Update user by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "password123"
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ]
                  },
                  "waterRate": {
                    "description": "User's water rate",
                    "type": "number",
                    "example": 2000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "User Signup",
        "operationId": "signupUser",
        "description": "Register a new user and create an account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/signupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input data or missing fields"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "User Signin",
        "operationId": "signinUser",
        "description": "Authenticate a user and provide a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/signinRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signinResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input data or missing fields"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User Logout",
        "operationId": "logoutUser",
        "description": "Logout the user and invalidate the session",
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get all water records",
        "operationId": "get",
        "description": "Get all water records for the current user",
        "responses": {
          "200": {
            "description": "Successfully found water records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water records!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create a new water record",
        "operationId": "postWater",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/water"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a record about water",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a record about water!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update an existing water record",
        "operationId": "patchWater",
        "description": "Patch water record by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the water record to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "The amount of water consumed in milliliters",
                    "type": "number",
                    "example": 150
                  },
                  "time": {
                    "description": "The time the water was consumed",
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-06-25T08:00:00.000+00:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a record!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Record not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete a water record",
        "operationId": "deleteWater",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the water record to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the water record"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Record not found"
          }
        }
      }
    },
    "/water/stats": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get today's water stats",
        "operationId": "stats",
        "responses": {
          "200": {
            "description": "Successfully get water stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get water stats!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/water/stats/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water stats for a specific month",
        "operationId": "statsMonth",
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer",
              "description": "The month for which to retrieve stats (1-12)",
              "example": 9
            }
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer",
              "description": "The year for which to retrieve stats",
              "example": 2023
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get water stats for the month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/water"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Credentials is incorrect"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b31165d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "example@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "password123"
          }
        }
      },
      "signupRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "maxLength": 64,
            "example": "stringpassword123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "signupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 201
          },
          "msg": {
            "type": "string",
            "example": "User was created"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "66d5874f56197e497607a13b"
              },
              "name": {
                "type": "string",
                "example": "oleh"
              },
              "email": {
                "type": "string",
                "example": "oleh1@gmail.com"
              },
              "gender": {
                "type": "string",
                "example": "female"
              },
              "avatarUrl": {
                "type": "string",
                "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
              },
              "waterRate": {
                "type": "integer",
                "example": 2000
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-09-02T09:37:19.723Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-09-02T09:37:19.723Z"
              }
            }
          }
        },
        "required": [
          "status",
          "msg",
          "data"
        ]
      },
      "signinRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "maxLength": 64,
            "example": "stringpassword123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "signinResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "msg": {
            "type": "string",
            "example": "Successfully logged in user"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "66d5874f56197e497607a13b"
                  },
                  "name": {
                    "type": "string",
                    "example": "oleh"
                  },
                  "email": {
                    "type": "string",
                    "example": "oleh1@gmail.com"
                  },
                  "gender": {
                    "type": "string",
                    "example": "female"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  },
                  "waterRate": {
                    "type": "integer",
                    "example": 2000
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-02T09:37:19.723Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-02T09:37:19.723Z"
                  }
                }
              }
            }
          }
        },
        "required": [
          "status",
          "msg",
          "data"
        ]
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "amount",
          "time",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "ID of the note",
            "type": "string",
            "example": "66ba0b2349ad1b749b0436b4"
          },
          "amount": {
            "description": "The amount of water consumed in milliliters",
            "type": "number",
            "example": 150
          },
          "time": {
            "description": "The time the water was consumed",
            "type": "string",
            "format": "date-time",
            "example": "2024-06-25T08:00:00.000+00:00"
          },
          "userId": {
            "description": "Id of the user who owns this note",
            "type": "string",
            "example": "66b8b7faba493948010270cb"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Credentials is incorrect"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "User not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}